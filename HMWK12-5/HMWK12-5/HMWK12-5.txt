/*
  	  Devin Fowler
      http://people.emich.edu/dfowle13/courses/Cosc311/HMWK12-5.rar
      COSC 311
      homework 12/5
      FALL 2016. 
 */
public class homework10 {
	public static int counter = 0;

	public static void main(String[] args) {
		String[] nameList = { "ikeji", "bahorski", "chaudhuri", "evett", "haynes", "maniccam", "moore", "narayanan",
				"panja", "poh", "sverdlik", "tehranipour", "zeiger", "zhang", "cowan", "francis", "mansour" };

		System.out.println("Before sorting the names: ");
		printArray(nameList);

		mergesort(nameList, 0, nameList.length);
		System.out.println();
		System.out.println("After Sort: ");
		printArray(nameList);

		System.out.println("Merge sort was invoked " + counter + " times");
	}

	private static void merge(String[] data, int first, int n1, int n2) {
		String[] temp = new String[n1 + n2];
		int copied = 0;
		int copied1 = 0;
		int copied2 = 0;

		while ((copied1 < n1) && (copied2 < n2)) {
			if (data[first + copied1].compareTo(data[first + n1 + copied2]) < 0)
				temp[copied++] = data[first + (copied1++)];
			else
				temp[copied++] = data[first + n1 + (copied2++)];
		}

		while (copied1 < n1)
			temp[copied++] = data[first + (copied1++)];
		while (copied2 < n2)
			temp[copied++] = data[first + n1 + (copied2++)];

		for (int i = 0; i < copied; i++)
			data[first + i] = temp[i];

	}

	public static void mergesort(String[] data, int first, int n) {
		counter++;
		int n1 = 0;
		int n2 = 0;

		if (n > 1) {
			n1 = n / 2;
			n2 = n - n1;

			mergesort(data, first, n1);
			mergesort(data, first + n1, n2);
		}

		merge(data, first, n1, n2);

	}

	public static void printArray(String[] arr) {
		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);

		}
	}

}
