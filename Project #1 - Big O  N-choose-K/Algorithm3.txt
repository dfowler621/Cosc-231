/*
  	  Devin Fowler
      http://people.emich.edu/dfowle13/courses/Cosc311/Project#1
      COSC 311
      Project #1
      FALL 2016. 
 */
import java.util.Arrays;
import java.util.Random;

public class Algorithm3 {

	public static void main(String[] args) {
		doWork();

	}

	public static void doWork() {
		long startTime;
		long endTime;
		int numberOfValues = 100;
		int numberToChoose = 10;
		int temp;
		int timesThrough = 0;
		int oldNum = -1;
		int[] numbers = new int[numberOfValues + 1];

		Random rand = new Random();

		System.out.println("Algorithm #3");

		for (int i = 0; i <= numberOfValues; i++) {
			numbers[i] = i;
		}

		for (int y = 0; y < numberToChoose; y++) {
			startTime = System.nanoTime();

			while (true) {

				int x = rand.nextInt(numberOfValues) + 0;

				if (x != oldNum) {

					System.out.println("Run #" + (y + 1));
					System.out.println("Number Chosen: " + x);

					temp = numbers[x];
					numbers[x] = numbers[numberOfValues];
					numbers[numberOfValues] = temp;

					int[] tempArray = Arrays.copyOf(numbers, numberOfValues);

					numbers = Arrays.copyOf(tempArray, numberOfValues);

					numberOfValues = numberOfValues - 1;
					oldNum = x;
					timesThrough++;

					endTime = System.nanoTime();
					long totalTime = (endTime - startTime) / 1000;
					System.out.println(
							"Ordered pair (n,k) is: " + "(" + (numberOfValues + timesThrough) + "," + (y + 1) + ")");
					System.out.println("Run time is: " + totalTime);

					System.out.println();
					break;
				}

				if (oldNum == x) {
					System.out.println("dupe");
					continue;

				}

			}
		}

	}

}
