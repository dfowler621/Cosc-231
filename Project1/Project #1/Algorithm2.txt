/*
  	  Devin Fowler
      http://people.emich.edu/dfowle13/courses/Cosc311/Project#1
      COSC 311
      Project #1
      FALL 2016. 
 */
import java.util.Random;

public class Algorithm2 {

	public static void main(String[] args) {
		doWork();

	}

	public static void doWork() {
		long startTime;
		long endTime;
		int numberOfValues = 100;
		int numberToChoose = 10;
		int[] numbers = new int[numberOfValues + 1];
		int[] used = new int[numberOfValues + 1];
		int timesThrough = 0;
		Random rand = new Random();
		
	

		System.out.println("Algorithm #2");

		for (int i = 0; i <= numberOfValues; i++) {
			numbers[i] = i;
		}

		for (int a = 0; a < numberToChoose; a++) {
			startTime = System.nanoTime();
			while (true) {

				int x = rand.nextInt(numberOfValues) + 0;

				if (used[x] != -1) {

					used[x] = -1;
					timesThrough++;
					System.out.println("Number " + (a + 1) + ": " + numbers[x]);
					endTime = System.nanoTime();
					long totalTime = (endTime - startTime) / 1000;
					System.out.println("Ordered pair (n,k) is: " + "(" + numberOfValues + "," + (a + 1) + ")");
					System.out.println("Run time is: " + totalTime);
					System.out.println();
					break;

				}
				if (used[x] == -1) {
					timesThrough = timesThrough - 1;
					continue;

				}
			}
		}

	}

}
